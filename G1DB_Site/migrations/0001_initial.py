# Generated by Django 3.2.9 on 2021-11-28 22:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestaurantorderappPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, unique=True)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'restaurantorderapp_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('custid', models.AutoField(db_column='Custid', primary_key=True, serialize=False)),
                ('custname', models.CharField(db_column='CustName', max_length=10)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=20, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=20, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=20, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZipCode', max_length=5, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=10, null=True)),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('deliveryid', models.AutoField(primary_key=True, serialize=False)),
                ('deliveryfee', models.FloatField(blank=True, null=True)),
                ('deliverytype', models.CharField(blank=True, db_column='Deliverytype', max_length=20, null=True)),
            ],
            options={
                'db_table': 'delivery',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('empid', models.AutoField(db_column='Empid', primary_key=True, serialize=False)),
                ('fname', models.CharField(db_column='Fname', max_length=10)),
                ('lname', models.CharField(db_column='Lname', max_length=20)),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('itemid', models.AutoField(primary_key=True, serialize=False)),
                ('itemprice', models.FloatField(blank=True, null=True)),
                ('itemname', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='Order1',
            fields=[
                ('orderid', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('deliveryfee', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('total_amount', models.FloatField(blank=True, db_column='Total_amount', null=True)),
                ('custid', models.ForeignKey(blank=True, db_column='Custid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.customer')),
                ('deliveryid', models.ForeignKey(blank=True, db_column='deliveryid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.delivery')),
            ],
            options={
                'db_table': 'order1',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.UUIDField(db_column='uid', primary_key=True, serialize=False)),
                ('email', models.EmailField(db_column='email', max_length=254)),
                ('name', models.TextField(blank=True, db_column='name')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Orderdetails',
            fields=[
                ('orderdetailid', models.AutoField(primary_key=True, serialize=False)),
                ('ordertype', models.CharField(max_length=20)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('orderdate', models.DateTimeField()),
                ('custid', models.ForeignKey(blank=True, db_column='Custid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.customer')),
                ('empid', models.ForeignKey(blank=True, db_column='Empid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.employee')),
                ('itemid', models.ForeignKey(blank=True, db_column='itemid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.items')),
                ('orderid', models.ForeignKey(blank=True, db_column='orderid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.order1')),
            ],
            options={
                'db_table': 'orderdetails',
            },
        ),
        migrations.CreateModel(
            name='Hotspot',
            fields=[
                ('zipcode', models.CharField(db_column='Zipcode', max_length=5, primary_key=True, serialize=False)),
                ('hotspotfee', models.FloatField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=20, null=True)),
                ('deliveryid', models.ForeignKey(blank=True, db_column='deliveryid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.delivery')),
            ],
            options={
                'db_table': 'hotspot',
            },
        ),
        migrations.AddField(
            model_name='delivery',
            name='empid',
            field=models.ForeignKey(blank=True, db_column='Empid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='G1DB_Site.employee'),
        ),
    ]
